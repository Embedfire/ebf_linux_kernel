/******************************************************************************
 *
 * Copyright (C) 2016-2017 Cadence Design Systems, Inc.
 * All rights reserved worldwide.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation and/or
 * other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Copyright 2017 NXP
 *
 ******************************************************************************
 *
 * This file was auto-generated. Do not edit it manually.
 *
 ******************************************************************************
 *
 * vic_table.h
 *
 ******************************************************************************
 */

#ifndef VIC_TABLE_H_
# define VIC_TABLE_H_

# define PROGRESSIVE 0
# define INTERLACED 1

# define ACTIVE_LOW 0
# define ACTIVE_HIGH 1

typedef enum {
	H_TOTAL,
	H_ACTIVE,
	H_BLANK,
	HSYNC,
	FRONT_PORCH,
	BACK_PORCH,
	H_FREQ_KHZ,
	V_TOTAL,
	V_ACTIVE,
	V_BLANK,
	VSYNC,
	TYPE_EOF,
	SOF,
	V_FREQ_HZ,
	PIXEL_FREQ_KHZ,
	I_P,
	HSYNC_POL,
	VSYNC_POL,
	START_OF_F0,
	START_OF_F1,
	VSYNC_START_INTERLACED_F0,
	VSYNC_END_INTERLACED_F0,
	VSYNC_START_INTERLACED_F1,
	VSYNC_END_INTERLACED_F1,
	VIC,
	VIC_R3_0,
	VIC_PR,
} MSA_PARAM;

typedef enum {
	NUM_OF_LANES_1 = 1,
	NUM_OF_LANES_2 = 2,
	NUM_OF_LANES_4 = 4,
} VIC_NUM_OF_LANES;

typedef enum {
	RATE_1_6 = 162,
	RATE_2_7 = 270,
	RATE_5_4 = 540,
	RATE_8_1 = 810,
} VIC_SYMBOL_RATE;

typedef enum {
	PXL_RGB = 0x1,
	YCBCR_4_4_4 = 0x2,
	YCBCR_4_2_2 = 0x4,
	YCBCR_4_2_0 = 0x8,
	Y_ONLY = 0x10,
} VIC_PXL_ENCODING_FORMAT;

typedef enum {
	BCS_6 = 0x1,
	BCS_8 = 0x2,
	BCS_10 = 0x4,
	BCS_12 = 0x8,
	BCS_16 = 0x10,
} VIC_COLOR_DEPTH;

typedef enum {
	STEREO_VIDEO_LEFT = 0x0,
	STEREO_VIDEO_RIGHT = 0x1,
} STEREO_VIDEO_ATTR;

typedef enum {
	BT_601 = 0x0,
	BT_709 = 0x1,
} BT_TYPE;

typedef enum {
#if 0
	VIC_MODE_1_59_94Hz,
	VIC_MODE_1_60Hz,
	VIC_MODE_2_59_94Hz,
	VIC_MODE_2_60Hz,
#endif
	VIC_MODE_3_59_94Hz,
#if 0
	VIC_MODE_3_60Hz,
	VIC_MODE_4_59_94Hz,
#endif
	VIC_MODE_4_60Hz,
#if 0
	VIC_MODE_5_59_94Hz,
	VIC_MODE_5_60Hz,
	VIC_MODE_6_59_94Hz,
	VIC_MODE_6_60Hz,
	VIC_MODE_7_59_94Hz,
	VIC_MODE_7_60Hz,
	VIC_MODE_8_MODE1_59_94Hz,
	VIC_MODE_8_MODE1_60Hz,
	VIC_MODE_8_MODE2_59_94Hz,
	VIC_MODE_8_MODE2_60Hz,
	VIC_MODE_9_MODE1_59_94Hz,
	VIC_MODE_9_MODE1_60Hz,
	VIC_MODE_9_MODE2_59_94Hz,
	VIC_MODE_9_MODE2_60Hz,
	VIC_MODE_10_59_94Hz,
	VIC_MODE_10_60Hz,
	VIC_MODE_11_59_94Hz,
	VIC_MODE_11_60Hz,
	VIC_MODE_12_MODE_1_59_94Hz,
	VIC_MODE_12_MODE_1_60Hz,
	VIC_MODE_12_MODE_2_59_94Hz,
	VIC_MODE_12_MODE_2_60Hz,
	VIC_MODE_13_MODE_1_59_94Hz,
	VIC_MODE_13_MODE_1_60Hz,
	VIC_MODE_13_MODE_2_59_94Hz,
	VIC_MODE_13_MODE_2_60Hz,
	VIC_MODE_14_59_94Hz,
	VIC_MODE_14_60Hz,
	VIC_MODE_15_59_94Hz,
	VIC_MODE_15_60Hz,
	VIC_MODE_16_59_94Hz,
#endif
	VIC_MODE_16_60Hz,
#if 0
	VIC_MODE_17_50Hz,
	VIC_MODE_18_50Hz,
	VIC_MODE_19_50Hz,
	VIC_MODE_20_50Hz,
	VIC_MODE_21_50Hz,
	VIC_MODE_22_50Hz,
	VIC_MODE_23_MODE_1_50Hz,
	VIC_MODE_23_MODE_2_50Hz,
	VIC_MODE_23_MODE_3_50Hz,
	VIC_MODE_24_MODE_1_50Hz,
	VIC_MODE_24_MODE_2_50Hz,
	VIC_MODE_24_MODE_3_50Hz,
	VIC_MODE_25_50Hz,
	VIC_MODE_26_50Hz,
	VIC_MODE_27_MODE_1_50Hz,
	VIC_MODE_27_MODE_2_50Hz,
	VIC_MODE_27_MODE_3_50Hz,
	VIC_MODE_28_MODE_1_50Hz,
	VIC_MODE_28_MODE_2_50Hz,
	VIC_MODE_28_MODE_3_50Hz,
	VIC_MODE_29_50Hz,
	VIC_MODE_30_50Hz,
	VIC_MODE_31_50Hz,
	VIC_MODE_32_23_97Hz,
	VIC_MODE_32_24Hz,
	VIC_MODE_33_25Hz,
	VIC_MODE_34_29_97Hz,
	VIC_MODE_34_30Hz,
	VIC_MODE_35_59_94Hz,
	VIC_MODE_35_60Hz,
	VIC_MODE_36_59_94Hz,
	VIC_MODE_36_60Hz,
	VIC_MODE_37_50Hz,
	VIC_MODE_38_50Hz,
	VIC_MODE_39_50Hz,
	VIC_MODE_40_100Hz,
	VIC_MODE_41_100Hz,
	VIC_MODE_42_100Hz,
	VIC_MODE_43_100Hz,
	VIC_MODE_44_100Hz,
	VIC_MODE_45_100Hz,
	VIC_MODE_46_119_88Hz,
	VIC_MODE_46_120Hz,
	VIC_MODE_47_119_88Hz,
	VIC_MODE_47_120Hz,
	VIC_MODE_48_119_88Hz,
	VIC_MODE_48_120Hz,
	VIC_MODE_49_119_88Hz,
	VIC_MODE_49_120Hz,
	VIC_MODE_50_119_88Hz,
	VIC_MODE_50_120Hz,
	VIC_MODE_51_119_88Hz,
	VIC_MODE_51_120Hz,
	VIC_MODE_52_200Hz,
	VIC_MODE_53_200Hz,
	VIC_MODE_54_200Hz,
	VIC_MODE_55_200Hz,
	VIC_MODE_56_239Hz,
	VIC_MODE_56_240Hz,
	VIC_MODE_57_239Hz,
	VIC_MODE_57_240Hz,
	VIC_MODE_58_239Hz,
	VIC_MODE_58_240Hz,
	VIC_MODE_59_239Hz,
	VIC_MODE_59_240Hz,
	VIC_MODE_60_23_97Hz,
	VIC_MODE_60_24Hz,
	VIC_MODE_61_25Hz,
	VIC_MODE_62_29_97Hz,
	VIC_MODE_62_30Hz,
	VIC_MODE_63_119_88Hz,
	VIC_MODE_63_120Hz,
	VIC_MODE_64_100Hz,
#endif
	VIC_MODE_97_60Hz,
	VIC_MODE_95_50Hz,
#if 0
	VIC_MODE_VESA_800X600P_60Hz,
	VIC_MODE_VESA_720X400P_70Hz,
	VIC_MODE_VESA_720X400P_88Hz,
	VIC_MODE_VESA_640X480P_60Hz,
	VIC_MODE_VESA_640X480P_67Hz,
	VIC_MODE_VESA_640X480P_72Hz,
	VIC_MODE_VESA_640X480P_75Hz,
	VIC_MODE_VESA_800X600P_56Hz,
	VIC_MODE_VESA_800X600P_72Hz,
	VIC_MODE_VESA_832X624P_75Hz,
	VIC_MODE_VESA_1024X768I_87Hz,
	VIC_MODE_VESA_1024X768P_60Hz,
	VIC_MODE_VESA_1024X768P_72Hz,
	VIC_MODE_VESA_1024X768P_75Hz,
	VIC_MODE_VESA_1280X1024P_75Hz,
	VIC_MODE_VESA_1152X870P_75Hz,
#endif
	VIC_MODE_COUNT
} VIC_MODES;

extern const unsigned int vic_table[VIC_MODE_COUNT][27];

#endif
